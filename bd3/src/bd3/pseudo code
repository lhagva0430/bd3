class Ажилтан{

    	String нэр
    	int код
    	String мэргэжил
    	int ажилд_орсон_жил
    
    	Ажил_нэр_буц(String нэр){

        	RETURN: нэр 

    		}

    	Ажил_код_буц(String нэр){

        	RETURN: код 

    		}

    	Ажил_мэргэжил_буц(String нэр){

        	RETURN: мэргэжил 

    		}

    	Ажил_жил_буц(String нэр){

        	RETURN: ажилд_орсон_жил 

    		}

    	toString(){

		RETURN: ажилтны нэгтгэсэн мэдээлэл

    		}

}
class  Ажилтан_Шилжүүлэх{

    	Ажилтнуудын_мэдээллүүдийг_жагсаалтад_хадгалах(String файлын_зам){

        Ажилтнуудын мэдээлэл хадгалах жагсаалт үүсгэх

       	    TRY (файл байгаа эсэх){

	        WHILE (мөр хоосон биш){

	            файлаас уншсан ажилтны мэдээллийг "/"-р тусгаарлан массивт хадгалах

	            IF (массивийн элемент 4-өөс их буюу тэнцүү){

                	Ажилтны мэдээллийг жагсаалтад хадгалах;

	            }

	            ELSE {
			мэдээлэл байхгүй эсвэл өөр төрлөөр хадгалагдсан тохиолдолд 
			мөрийг хэвлэж харуулна
	            }

	        }

            }

	    CATCH (алдааны мэдээлэл){

	        OUTPUT: алдааны мэдээлэл 

	     	}

		RETURN: ажилтнуудын жагсаалт

	}

	Ажилласан_жил_тооцох(String ажилд_орсон_жил){

            (энэ_жил)-(ажилд_орсон_жил) 
	    RETURN: нийт_ажилласан_жил  

	}

	Дарханы_файлд_ажилтны_мэдээлэл_хуулах(){
	
	    TRY(Дарханы_файл байгаа){
	
	        ажилтны мэдээллийг Дарханы файлд бичих
	
	    }

            CATCH(Алдааны мэдээлэл){

	        OUTPUT: Алдааны мэдээлэл 

	    }
	
	}

	Улаанбаатарын_ажилчдын_мэдээлэл_шинэчлэх(Employee){
	
            TRY(Улаанбаатарын_файл байгаа){
	
	        хэрэглэгчийн мэдээллийг Улаанбаатарын файлд "/"-р тусгаарлаж бичих
	
	    }

	    CATCH(Алдааны мэдээлэл){

        	Алдааны мэдээлэл хэвлэх

	    }    
	           
	}

	вариант2 (){
	  
           	 String Улаанбаатарын_файлын_зам
           	 String дархан_файлын_зам

          	 ажилтны мэдээллийг хадгалах жагсаалт хийх
           	 ажилтны мэдээллийг нэрээр нь ангилна
	   	 Тоолуурт ажилтны жагсаалтыг олгох
            
           	 WHILE(файлын сүүлийн мөр хүртэл){
         
               		 файлаас ажилтны мэдээллийг мөр мөрөөр нь авах; 
		 
               		 Дарханы_файлд мэдээллийг хуулах;
			 тоолуурын утгыг устгах;
			}
		
		Улаанбаатарын ажилчдын мэдээллийг устгах;
		Дарханы файлд хадгалагдсан мэдээллийг жагсаалт болгох;
		Дарханы мэдээлэлтэй жагсаалтыг ажилтны нэрээр ангилах;
		дарханы ажилчдын жагсаалтыгашиглах тоолуурын объект үүсгэх;

		WHILE (жагсаалтын сүүлийн гишүүн){
		
			тоолуурын утгыг дараагийн утгаар өөрчлөх;
		
               		 IF (ажилласан_жил 1-ээс их){
		    
				ажилтны мэдээллийг Улаанбаатарын файлд хуулах;

				тоолуур дахь утгыг жагсаалтаас устгах;
               			}
		
           		 }

              Дарханы файлд шилжсэн ажилчдын мэдээллийг хуулна
	    
	}

	вариант1 (){
	  
            String Улаанбаатарын_файлын_зам
            String дархан_файлын_зам

            ажилтны мэдээллийг хадгалах жагсаалт хийх;
            ажилтны мэдээллийг нэрээр нь ангилна;
	    Тоолуурт ажилтны жагсаалтыг олгох;

	    WHILE (жагсаалтын сүүлийн гишүүн){
		
			тоолуурын утгыг дараагийн утгаар өөрчлөх;
		
                	IF(ажилласан_жил 1-ээс их){
		    
				ажилтны мэдээллийг Дарханы файлд хуулах;

				тоолуур дахь утгыг жагсаалтаас устгах;
               			 }
		
           		 }

              Улаанбаатарын файлд шилжээгүй ажилчдын мэдээллийг хуулна

	}
	main(){

		INPUT: вариантын дугаар;

		WHILE (авсан утга 1,2-с ялгаатай байх){

			INPUT: вариантын дугаар;

			}

		SWITCH(гараас авсан утга){

			CASE 1:
				CALL: вариант1();
				BREAK;

			CASE 2:
				CALL: вариант2();
				BREAK;

		}

	}
}



программыг шалгахдаа:
 1.үүсгэсэн байгаа Улаанбаатарын болон Дарханы мэдээллүүдийг хадгалах
 файлуудыг шалгана
 2.main() функцийг ажиллуулж 2 хувилбарын аль нэгийн дугаарыг оруулна
 3.Программ ажиллаж дэлгэцэнд үр дүнг үзүүлнэ мөн Улаанбаатарын болон
 Дарханы файл руу өөрчлөлтийг харж болно.
